"""
Условие
В генеалогическом древе у каждого человека, кроме родоначальника, есть ровно один родитель.
Каждом элементу дерева сопоставляется целое неотрицательное число, называемое высотой.
У родоначальника высота равна 0, у любого другого элемента высота на 1 больше, чем у его родителя.
Вам дано генеалогическое древо, определите высоту всех его элементов.
Программа получает на вход число элементов в генеалогическом древе N.
Далее следует N−1 строка, задающие родителя для каждого элемента древа, кроме родоначальника.
Каждая строка имеет вид имя_потомка имя_родителя.
Программа должна вывести список всех элементов древа в лексикографическом порядке.
После вывода имени каждого элемента необходимо вывести его высоту.
Примечание
Эта задача имеет решение сложности O(n), но вам достаточно написать решение сложности O(n2)
(не считая сложности обращения к элементам словаря).
"""


def find_family(parent, level):
    if parent is None:
        return level
    return find_family(dict_family[parent], level + 1)


dict_result = {}
dict_family = {}
for i in range(int(input()) - 1):
    name_child, name_parent = input().split()
    dict_family[name_child] = name_parent
    if name_parent not in dict_family.keys():  # если нет потомков
        dict_family[name_parent] = None

for key, value in dict_family.items():
    dict_result[key] = find_family(value, 0)

for key, value in sorted(dict_result.items()):
    print(key, value)
